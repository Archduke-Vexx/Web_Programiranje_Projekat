// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WEBPROJ.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SportskiCentarID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SportskiCentarID");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("Models.SportskiCentar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Lokacija")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("SportskiCentri");
                });

            modelBuilder.Entity("Models.Zakazivanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int?>("SalaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("SalaID");

                    b.ToTable("Zakazivanja");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.HasOne("Models.SportskiCentar", "SportskiCentar")
                        .WithMany("Sale")
                        .HasForeignKey("SportskiCentarID");

                    b.Navigation("SportskiCentar");
                });

            modelBuilder.Entity("Models.Zakazivanje", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany("Zakazivanja")
                        .HasForeignKey("KorisnikID");

                    b.HasOne("Models.Sala", "Sala")
                        .WithMany("Zakazivanja")
                        .HasForeignKey("SalaID");

                    b.Navigation("Korisnik");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Navigation("Zakazivanja");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Navigation("Zakazivanja");
                });

            modelBuilder.Entity("Models.SportskiCentar", b =>
                {
                    b.Navigation("Sale");
                });
#pragma warning restore 612, 618
        }
    }
}
